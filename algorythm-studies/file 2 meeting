#include <iostream>
using namespace std;

struct mac{
    long long  f[2][2];
    mac(){
        f[0][0] = f[0][1] = f[1][0] =1, f[1][1] = 0;
    }
    mac(long long  a,long long b , long long c ,long long d){
        f[0][0] =a, f[0][1] =b, f[][0] =c,  f[1][1] = d;
    }
};
mac mnoz (const mac &x, const mac &y int m){
    return mac (x.f[0][0]*y.[0][0]+x.f[0][1]*y.f.[1][0])%m,
          (x.f[0][0]*y.[0][1]+x.f[0][1]*y.f.[1][1])%m,
          (x.f[1][0]*y.[0][0]+x.f[1][1]*y.f.[1][0])%m,
          (x.f[1][0]*y.[0][1]+x.f[1][1]*y.f.[1][1])%m;
}
mac pot (const mac &x, int n, int m){
    if(n ==1) return x;
    mac y = pot(x,n/2,m);
    y = mnoz(y,y,m);
    if(n% 2 == 1)y = mnoz(y , x , m);
    return y;
}
int fibo(int n, int m);

int main(){
    int t;
    cin>>t;
    while (t--) {
        int n,m;
        cin>> n >> m;
        cout << fibo(n,m) << endl;
    }
    return 0;
}
int fibo(int n,int m){
   if(m ==1) return 0;
   if(n < 2) return n;
   mac x = pot({}, n - 1 , m);
   return x.f[0][0];
   }